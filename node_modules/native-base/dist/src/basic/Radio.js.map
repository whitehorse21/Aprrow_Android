{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","defaultProps","standardStyle","props","variables","context","theme","variable","platformStyle","platform","_root","c","prepareRootProps","Platform","OS","selected","color","radioColor","lineHeight","height","fontSize","radioBtnSize","undefined","radioSelectedColorAndroid","radioBtnLineHeight","Component","contextTypes","PropTypes","object","propTypes","TouchableOpacity","bool","StyledRadio","mapPropsToStyleNames"],"mappings":"q1BAAA,4B;AACA,qC;AACA;AACA;AACA,4D;AACA,mE;AACA,qD;AACA,mD;;AAEMA,K;;;;AAIc;AAClB,GAAMC,cAAe;AACpBC,cAAe,KADK,CAArB;;;AAIA,MAAO,2BAAa,KAAKC,KAAlB,CAAyBF,YAAzB,CAAP;AACA,C;;AAEQ;AACR,GAAMG,WAAY,KAAKC,OAAL,CAAaC,KAAb,CAAqB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAtE,CAAkFG,kBAApG;AACA,GAAMC,eAAgBJ,UAAUI,aAAhC;AACA,GAAMC,UAAWL,UAAUK,QAA3B;;AAEA;AACC,8BAAC,6BAAD,WAAkB,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAvB,EAAkD,KAAKC,gBAAL,EAAlD;AACEC,sBAASC,EAAT,GAAgB,KAAhB,EAAyB,CAAC,KAAKX,KAAL,CAAWD,aAArC;AACE,KAAKC,KAAL,CAAWY,QAAX;AACD,8BAAC,kBAAD;AACC,MAAO;AACNC,MAAOZ,UAAUa,UADX;AAENC,WAAY,EAFN;AAGNC,OAAQ,EAHF;AAINC,SAAUhB,UAAUiB,YAJd,CADR;;AAOC,KAAK,eAPN,iDAFD;;AAWE,8BAAC,kBAAD;AACA,MAAO;AACNL;AACCH,sBAASC,EAAT,GAAgB,KAAhB;AACG,KAAKX,KAAL,CAAWY,QAAX,CAAsBX,UAAUa,UAAhC,CAA6CK,SADhD;AAEG,KAAKnB,KAAL,CAAWY,QAAX,CAAsBX,UAAUmB,yBAAhC,CAA4DD,SAJ1D;AAKNJ,WAAYd,UAAUoB,kBALhB;AAMNJ,SAAUhB,UAAUiB,YANd,CADP;;AASA;AACCR,sBAASC,EAAT,GAAgB,KAAhB;AACG,KAAKX,KAAL,CAAWY,QAAX,CAAsB,qBAAtB,CAA8C,sBADjD;AAEG,KAAKZ,KAAL,CAAWY,QAAX,CAAsB,oBAAtB,CAA6C,qBAZjD,iDAZJ,CADD;;;;;AA8BA,C,mBA/CkBU,gB,EAAdzB,K,CACE0B,Y,CAAe,CACrBpB,MAAOqB,oBAAUC,MADI,C;;;AAiDvB5B,MAAM6B,SAAN;AACIC,8BAAiBD,SADrB;AAECd,SAAUY,oBAAUI,IAFrB;AAGC7B,cAAeyB,oBAAUI,IAH1B;;;AAMA,GAAMC,aAAc,yCAAa,kBAAb,CAAiC,EAAjC,CAAqCC,8BAArC,EAA2DjC,KAA3D,CAApB,C;;AAEwBA,K,CAAfgC,W","file":"Radio.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity, Platform } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\nimport computeProps from \"../utils/computeProps\";\n\nclass Radio extends Component {\n\tstatic contextTypes = {\n\t\ttheme: PropTypes.object,\n\t};\n\tprepareRootProps() {\n\t\tconst defaultProps = {\n\t\t\tstandardStyle: false,\n\t\t};\n\n\t\treturn computeProps(this.props, defaultProps);\n\t}\n\n\trender() {\n\t\tconst variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\n\t\tconst platformStyle = variables.platformStyle;\n\t\tconst platform = variables.platform;\n\n\t\treturn (\n\t\t\t<TouchableOpacity ref={c => (this._root = c)} {...this.prepareRootProps()}>\n\t\t\t\t{Platform.OS === \"ios\" && !this.props.standardStyle\n\t\t\t\t\t? this.props.selected &&\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: variables.radioColor,\n\t\t\t\t\t\t\t\tlineHeight: 25,\n\t\t\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\t\t\tfontSize: variables.radioBtnSize,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname=\"ios-checkmark\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t: <Icon\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\tPlatform.OS === \"ios\"\n\t\t\t\t\t\t\t\t\t\t? this.props.selected ? variables.radioColor : undefined\n\t\t\t\t\t\t\t\t\t\t: this.props.selected ? variables.radioSelectedColorAndroid : undefined,\n\t\t\t\t\t\t\t\tlineHeight: variables.radioBtnLineHeight,\n\t\t\t\t\t\t\t\tfontSize: variables.radioBtnSize,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname={\n\t\t\t\t\t\t\t\tPlatform.OS === \"ios\"\n\t\t\t\t\t\t\t\t\t? this.props.selected ? \"ios-radio-button-on\" : \"ios-radio-button-off\"\n\t\t\t\t\t\t\t\t\t: this.props.selected ? \"md-radio-button-on\" : \"md-radio-button-off\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>}\n\t\t\t</TouchableOpacity>\n\t\t);\n\t}\n}\n\nRadio.propTypes = {\n\t...TouchableOpacity.propTypes,\n\tselected: PropTypes.bool,\n\tstandardStyle: PropTypes.bool,\n};\n\nconst StyledRadio = connectStyle(\"NativeBase.Radio\", {}, mapPropsToStyleNames)(Radio);\n\nexport { StyledRadio as Radio };\n"]}